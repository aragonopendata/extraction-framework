# download and extraction target dir
base-dir=/Users/ocorcho1/Trabajo/LocaliData/OpenDataAragon/src_publico/ExtractionFramework/aragodbpedia/dumps/

# Source file. If source file name ends with .gz or .bz2, it is unzipped on the fly. 
# Must exist in the directory xxwiki/yyyymmdd and have the prefix xxwiki-yyyymmdd-
# where xx is the wiki code and yyyymmdd is the dump date.
 
# default:
#source=pages-articles.xml.bz2
#source=pages-articles.xml.gz
source=pages-articles.xml

# use only directories that contain a 'download-complete' file? Default is false.
require-download-complete=false

# List of languages or article count ranges, e.g. 'en,de,fr' or '10000-20000' or '10000-', or '@mappings'
#languages=10000-
languages=es

# extractor class names starting with "." are prefixed by "org.dbpedia.extraction.mappings"

#extractors=.ArticleCategoriesExtractor,.ArticleTemplatesExtractor,.CategoryLabelExtractor,\
#.ExternalLinksExtractor,.GeoExtractor,.InfoboxExtractor,.InterLanguageLinksExtractor,.LabelExtractor,.PageIdExtractor,\
#.PageLinksExtractor,.RedirectExtractor,.RevisionIdExtractor,.RevisionUriExtractor,.SkosCategoriesExtractor,\
#.WikiPageExtractor

#extractors.es=.MappingExtractor,.DisambiguationExtractor,.HomepageExtractor,.TopicalConceptsExtractor
extractors.es=.MappingExtractor

# if ontology and mapping files are not given or do not exist, download info from mappings.dbpedia.org
#ontology=../ontology.xml
ontology=/Users/ocorcho1/Trabajo/LocaliData/OpenDataAragon/src_publico/ExtractionFramework/aragodbpedia/configurationFiles/extraction/ontology.xml
#mappings=../mappings
mappings=/Users/ocorcho1/Trabajo/LocaliData/OpenDataAragon/src_publico/ExtractionFramework/aragodbpedia/configurationFiles/extraction

# Serialization URI policies and file formats. Quick guide:
# uri-policy keys: uri, generic, xml-safe, reject-long
# uri-policy position modifiers: -subjects, -predicates, -objects, -datatypes, -contexts
# uri-policy values: comma-separated languages or '*' for all languages
# format values: n-triples, n-quads, turtle-triples, turtle-quads, trix-triples, trix-quads
# See http://git.io/DBpedia-serialization-format-properties for details.

# For backwards compatibility, en uses generic URIs. All others use local IRIs.
#uri-policy.uri=uri:en; generic:en; xml-safe-predicates:*; reject-long:*
uri-policy.iri=generic:en; xml-safe-predicates:*; reject-long:*
#uri-policy.uri=uri:*; generic:*; xml-safe-predicates:*; reject-long:*
#uri-policy.iri=generic:*; xml-safe-predicates:*; reject-long:*
uri-policy.uri=uri:es; generic:es; xml-safe-predicates:*; reject-long:*
#uri-policy.iri=generic:es; xml-safe-predicates:*; reject-long:*

# NT is unreadable anyway - might as well use URIs for en
#format.nt.gz=n-triples;uri-policy.uri
#format.nq.gz=n-quads;uri-policy.uri

# Turtle is much more readable - use nice IRIs for all languages
format.ttl.gz=turtle-triples;uri-policy.iri
#format.tql.gz=turtle-quads;uri-policy.iri
